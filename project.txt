using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using OTBS.Models;
using System.Threading.Tasks;

namespace OTBS.Controllers
{
    public class AdminController : Controller
    {
        // GET: Admin

        Training_20March_CloudChennaiEntities4 dbObj = new Training_20March_CloudChennaiEntities4();
        [HttpGet]
        public ActionResult AdminLogin()
        {
            return View();
        }

        [HttpPost]
        public ActionResult AdminLogin(TaxiAdminLogin t)
        {
            TaxiAdminLogin ad = dbObj.TaxiAdminLogins.Where(x => x.EmailID == t.EmailID && x.Password == t.Password).SingleOrDefault();
            if (ad != null)
            {
                Session["EmailID"] = ad.EmailID;
                return RedirectToAction("AdminRoles");
            }       
            else
            {
                ViewBag.error = "Invalid username or password";
            }
            return View();
        }
        public ActionResult AdminRoles()
        {
            return View();
        }
        public ActionResult ChangePassword()
        {
            return View();
        }
        [HttpGet]
        public ActionResult RegisterTaxi()
        {
            return View();
        }
        public ActionResult ManageRoaster()
        {
            return View();
        }
        public ActionResult ManageTaxidetails()
        {
            return View();
        }
        [HttpPost]
        public ActionResult RegisterTaxi( MiniprojectTaxi  newTaxi)
        {
            dbObj.MiniprojectTaxis.Add(newTaxi);
            dbObj.SaveChanges();
            return RedirectToAction("Message");
        }
        [HttpGet]
        public ActionResult RegisterRoaster()
        {
            return View();
        }
        [HttpPost]
        public ActionResult RegisterRoaster(TaxiEmployeeRoaster Roaster)
        {
            dbObj.TaxiEmployeeRoasters.Add(Roaster);
            dbObj.SaveChanges();
            return RedirectToAction("Message");
        }
        [HttpGet]
        public ActionResult RegisterEmployee()
        {
            return View();
        }
        [HttpPost]
        public ActionResult RegisterEmployee(TaxiEmployeeLogin Emp)
        {
            dbObj.TaxiEmployeeLogins.Add(Emp);
            dbObj.SaveChanges();
            return RedirectToAction("Message");
        }


        public ActionResult ViewFeedBacks()
        {
            List<TaxiFeedback> FB = dbObj.TaxiFeedbacks.ToList();
           
            return View(FB);
        }
        public ActionResult ManageEmployee()
        {
            return View();
        }

        public ActionResult Managefeedbacks()
        {
            List<TaxiFeedback> ls = dbObj.TaxiFeedbacks.ToList();
            return View(ls);
        }
      
        public ActionResult Message()
        {
            return View();
        }
    }
}
==========================================================================================================================================================================
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.ComponentModel.DataAnnotations;
using OTBS.Models;

namespace OTBS.Controllers
{
    public class EmployeeLoginController : Controller
    {
        // GET: EmployeeLogin
        Training_20March_CloudChennaiEntities4 Dbentity = new Training_20March_CloudChennaiEntities4();
        public ActionResult Index()
        {
            return View();
        }
        [HttpGet]
        public ActionResult EmployeeLogin()
        {
            return View();
        }

        [HttpPost]
        public ActionResult EmployeeLogin(TaxiEmployeeLogin login)
        {

            TaxiEmployeeLogin ad = Dbentity.TaxiEmployeeLogins.Where(x => x.EmployeeName == login.EmployeeName && x.Password == login.Password).SingleOrDefault();
            //if (ModelState.IsValid)
            //{
               
                //var user = (from TaxiEmployeeLogin cl in Dbentity.TaxiEmployeeLogins
                //            where cl.EmployeeName == login.EmployeeName && cl.Password == login.Password
                //            select new
                //            {
                //                cl.EmployeeName
                //            }).ToList();
                if (ad != null)
                {
                    Session["EmployeeName"] = ad.EmployeeName;

                    return RedirectToAction("EmployeeRoles");
                }
                else
                {
                    ModelState.AddModelError("", "Invalid login credentials.");
                }
            
            return View();
        }

        public ActionResult EmployeeRoles()
        {
            return View();
        }
        public ActionResult Bookings()
        {
            List<TaxiBooking> ls = Dbentity.TaxiBookings.ToList();
            return View(ls);
        }
        public ActionResult EmployeeRoaster()
        {
            List<TaxiEmployeeRoaster> ls = Dbentity.TaxiEmployeeRoasters.ToList();
            return View(ls);
        }
        [HttpGet]
        public ActionResult FeedBacks()
        {
            return View();
        }
        [HttpPost]
        public ActionResult FeedBacks(TaxiFeedback FB)
        {
            Dbentity.TaxiFeedbacks.Add(FB);
            Dbentity.SaveChanges();
            return RedirectToAction("EmployeeRoles");
        }

    }
}
===========================================================================================================================================================================


<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
</head>
<body>
   <h2>SC Online-Taxibookings</h2>
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <a href="#" class="navbar-left"><img src="https://library.kissclipart.com/20181124/ete/kissclipart-taxi-logo-png-clipart-taxi-larnaca-5e214a6033a3adb9.png" alt="logo" width="50" height="50" align="right"></a>
            </div>
            <ul class="nav navbar-nav">
                
                <li  >@Html.ActionLink("Home","Index", "Home")</li>
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">Login<span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("Customer","Customerlogin","Home")</li>
                        <li> @Html.ActionLink("Employee", "EmployeeLogin", "EmployeeLogin")</li>
                        <li>@Html.ActionLink("Admin","AdminLogin","Admin")</li>
                    </ul>
                </li>               
                <li>@Html.ActionLink("CustomerRegister", "CustomerRegister","Home")</li>
            </ul>
        </div>   
    </nav>
    <div>
        @RenderBody()
      
    </div>
   

   
</body>

</html>
